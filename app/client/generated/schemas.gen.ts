// This file is auto-generated by @hey-api/openapi-ts

export const DriverLapDataOutSchema = {
    properties: {
        driver: {
            type: "string",
            title: "Driver",
        },
        team: {
            type: "string",
            title: "Team",
        },
        data: {
            items: {
                $ref: "#/components/schemas/LapTimingDataOut",
            },
            type: "array",
            title: "Data",
        },
    },
    type: "object",
    required: ["driver", "team", "data"],
    title: "DriverLapDataOut",
} as const

export const DriverQualifyingResultDtoSchema = {
    properties: {
        Driver: {
            type: "string",
            title: "Driver",
        },
        DriverNumber: {
            type: "string",
            title: "Drivernumber",
        },
        CountryCode: {
            type: "string",
            title: "Countrycode",
        },
        TeamId: {
            type: "string",
            title: "Teamid",
        },
        TeamName: {
            type: "string",
            title: "Teamname",
        },
        Q1Time: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Q1Time",
        },
        Q2Time: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Q2Time",
        },
        Q3Time: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Q3Time",
        },
    },
    type: "object",
    required: ["Driver", "DriverNumber", "CountryCode", "TeamId", "TeamName", "Q1Time", "Q2Time", "Q3Time"],
    title: "DriverQualifyingResultDto",
} as const

export const ECompoundSchema = {
    type: "string",
    enum: ["SOFT", "MEDIUM", "HARD", "INTERMEDIATE", "WET", "TEST_UNKNOWN"],
    title: "ECompound",
} as const

export const HTTPValidationErrorSchema = {
    properties: {
        detail: {
            items: {
                $ref: "#/components/schemas/ValidationError",
            },
            type: "array",
            title: "Detail",
        },
    },
    type: "object",
    title: "HTTPValidationError",
} as const

export const LapTimingDataOutSchema = {
    properties: {
        LapTime: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Laptime",
        },
        Sector1Time: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Sector1Time",
        },
        Sector2Time: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Sector2Time",
        },
        Sector3Time: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Sector3Time",
        },
        ST1: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "St1",
        },
        ST2: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "St2",
        },
        ST3: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "St3",
        },
        LapNumber: {
            type: "integer",
            title: "Lapnumber",
        },
        Stint: {
            anyOf: [
                {
                    type: "integer",
                },
                {
                    type: "null",
                },
            ],
            title: "Stint",
        },
        TyreLife: {
            anyOf: [
                {
                    type: "integer",
                },
                {
                    type: "null",
                },
            ],
            title: "Tyrelife",
        },
        Position: {
            anyOf: [
                {
                    type: "integer",
                },
                {
                    type: "null",
                },
            ],
            title: "Position",
        },
        Compound: {
            $ref: "#/components/schemas/ECompound",
        },
        IsOutlap: {
            type: "boolean",
            title: "Isoutlap",
        },
        IsInlap: {
            type: "boolean",
            title: "Isinlap",
        },
    },
    type: "object",
    required: [
        "LapTime",
        "Sector1Time",
        "Sector2Time",
        "Sector3Time",
        "ST1",
        "ST2",
        "ST3",
        "LapNumber",
        "Stint",
        "TyreLife",
        "Position",
        "Compound",
        "IsOutlap",
        "IsInlap",
    ],
    title: "LapTimingDataOut",
} as const

export const PracticeDriverResultDtoSchema = {
    properties: {
        Driver: {
            type: "string",
            title: "Driver",
        },
        DriverNumber: {
            type: "string",
            title: "Drivernumber",
        },
        CountryCode: {
            type: "string",
            title: "Countrycode",
        },
        TeamId: {
            type: "string",
            title: "Teamid",
        },
        TeamName: {
            type: "string",
            title: "Teamname",
        },
        Time: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Time",
        },
    },
    type: "object",
    required: ["Driver", "DriverNumber", "CountryCode", "TeamId", "TeamName", "Time"],
    title: "PracticeDriverResultDto",
} as const

export const RaceDriverResultDtoSchema = {
    properties: {
        Driver: {
            type: "string",
            title: "Driver",
        },
        DriverNumber: {
            type: "string",
            title: "Drivernumber",
        },
        CountryCode: {
            type: "string",
            title: "Countrycode",
        },
        TeamId: {
            type: "string",
            title: "Teamid",
        },
        TeamName: {
            type: "string",
            title: "Teamname",
        },
        GridPosition: {
            type: "integer",
            title: "Gridposition",
        },
        Status: {
            type: "string",
            title: "Status",
        },
        Points: {
            type: "integer",
            title: "Points",
        },
        Time: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Time",
        },
        Gap: {
            anyOf: [
                {
                    type: "number",
                },
                {
                    type: "null",
                },
            ],
            title: "Gap",
        },
    },
    type: "object",
    required: [
        "Driver",
        "DriverNumber",
        "CountryCode",
        "TeamId",
        "TeamName",
        "GridPosition",
        "Status",
        "Points",
        "Time",
        "Gap",
    ],
    title: "RaceDriverResultDto",
} as const

export const ScheduledEventCollectionSchema = {
    properties: {
        RoundNumber: {
            items: {
                type: "integer",
            },
            type: "array",
            title: "Roundnumber",
        },
        Country: {
            items: {
                type: "string",
            },
            type: "array",
            title: "Country",
        },
        EventDate: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Eventdate",
        },
        EventName: {
            items: {
                type: "string",
            },
            type: "array",
            title: "Eventname",
        },
        OfficialEventName: {
            items: {
                type: "string",
            },
            type: "array",
            title: "Officialeventname",
        },
        EventFormat: {
            items: {
                type: "string",
            },
            type: "array",
            title: "Eventformat",
        },
        Session1: {
            items: {
                $ref: "#/components/schemas/SessionIdentifier",
            },
            type: "array",
            title: "Session1",
        },
        Session1Date: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session1Date",
        },
        Session1DateUtc: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session1Dateutc",
        },
        Session2: {
            items: {
                $ref: "#/components/schemas/SessionIdentifier",
            },
            type: "array",
            title: "Session2",
        },
        Session2Date: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session2Date",
        },
        Session2DateUtc: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session2Dateutc",
        },
        Session3: {
            items: {
                $ref: "#/components/schemas/SessionIdentifier",
            },
            type: "array",
            title: "Session3",
        },
        Session3Date: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session3Date",
        },
        Session3DateUtc: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session3Dateutc",
        },
        Session4: {
            items: {
                anyOf: [
                    {
                        $ref: "#/components/schemas/SessionIdentifier",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session4",
        },
        Session4Date: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session4Date",
        },
        Session4DateUtc: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session4Dateutc",
        },
        Session5: {
            items: {
                anyOf: [
                    {
                        $ref: "#/components/schemas/SessionIdentifier",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session5",
        },
        Session5Date: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session5Date",
        },
        Session5DateUtc: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "null",
                    },
                ],
            },
            type: "array",
            title: "Session5Dateutc",
        },
        F1ApiSupport: {
            items: {
                type: "boolean",
            },
            type: "array",
            title: "F1Apisupport",
        },
    },
    type: "object",
    required: [
        "RoundNumber",
        "Country",
        "EventDate",
        "EventName",
        "OfficialEventName",
        "EventFormat",
        "Session1",
        "Session1Date",
        "Session1DateUtc",
        "Session2",
        "Session2Date",
        "Session2DateUtc",
        "Session3",
        "Session3Date",
        "Session3DateUtc",
        "Session4",
        "Session4Date",
        "Session4DateUtc",
        "Session5",
        "Session5Date",
        "Session5DateUtc",
        "F1ApiSupport",
    ],
    title: "ScheduledEventCollection",
} as const

export const SessionIdentifierSchema = {
    type: "string",
    enum: [
        "Race",
        "Qualifying",
        "Sprint",
        "Sprint Qualifying",
        "Sprint Shootout",
        "Practice 1",
        "Practice 2",
        "Practice 3",
    ],
    title: "SessionIdentifier",
} as const

export const SessionSummarySchema = {
    properties: {
        weather: {
            $ref: "#/components/schemas/SessionWeather",
        },
        summary: {
            $ref: "#/components/schemas/Summary",
        },
    },
    type: "object",
    required: ["weather", "summary"],
    title: "SessionSummary",
} as const

export const SessionWeatherSchema = {
    properties: {
        air_temp_start: {
            type: "number",
            title: "Air Temp Start",
        },
        air_temp_finish: {
            type: "number",
            title: "Air Temp Finish",
        },
        track_temp_start: {
            type: "number",
            title: "Track Temp Start",
        },
        track_temp_finish: {
            type: "number",
            title: "Track Temp Finish",
        },
        humidity_start: {
            type: "number",
            title: "Humidity Start",
        },
        humidity_finish: {
            type: "number",
            title: "Humidity Finish",
        },
    },
    type: "object",
    required: [
        "air_temp_start",
        "air_temp_finish",
        "track_temp_start",
        "track_temp_finish",
        "humidity_start",
        "humidity_finish",
    ],
    title: "SessionWeather",
} as const

export const SummarySchema = {
    properties: {
        start_time: {
            anyOf: [
                {
                    type: "string",
                },
                {
                    type: "null",
                },
            ],
            title: "Start Time",
        },
        finish_time: {
            anyOf: [
                {
                    type: "string",
                },
                {
                    type: "null",
                },
            ],
            title: "Finish Time",
        },
        round_name: {
            type: "string",
            title: "Round Name",
        },
        official_name: {
            type: "string",
            title: "Official Name",
        },
        session_type: {
            type: "string",
            title: "Session Type",
        },
    },
    type: "object",
    required: ["start_time", "finish_time", "round_name", "official_name", "session_type"],
    title: "Summary",
} as const

export const ValidationErrorSchema = {
    properties: {
        loc: {
            items: {
                anyOf: [
                    {
                        type: "string",
                    },
                    {
                        type: "integer",
                    },
                ],
            },
            type: "array",
            title: "Location",
        },
        msg: {
            type: "string",
            title: "Message",
        },
        type: {
            type: "string",
            title: "Error Type",
        },
    },
    type: "object",
    required: ["loc", "msg", "type"],
    title: "ValidationError",
} as const
